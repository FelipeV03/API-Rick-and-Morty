{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RickyMortyService {\n  constructor(http) {\n    this.http = http;\n  }\n  getRickyMorty() {\n    return this.http.get('https://rickandmortyapi.com/api/character/?page=/?random' + Date.now());\n  }\n}\nRickyMortyService.ɵfac = function RickyMortyService_Factory(t) {\n  return new (t || RickyMortyService)(i0.ɵɵinject(i1.HttpClient));\n};\nRickyMortyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RickyMortyService,\n  factory: RickyMortyService.ɵfac,\n  providedIn: 'root'\n});\nfetch(https, then(response => response.json()).then(data => {\n  const characters = data.results;\n  console.log(characters);\n}).catch(error => console.error(error)));","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,aAAa;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,0DAA0D,GAAGC,IAAI,CAACC,GAAG,EAAE,CAAC;EACpG;;AANWN,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAO,SAAjBP,iBAAiB;EAAAQ,YAFhB;AAAM;AAYpBC,KAAK,CAAEC,KAAK,EACTC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAG;EACX,MAAMC,UAAU,GAAGD,IAAI,CAACE,OAAO;EAC/BC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;AACzB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC","names":["RickyMortyService","constructor","http","getRickyMorty","get","Date","now","factory","providedIn","fetch","https","then","response","json","data","characters","results","console","log","catch","error"],"sourceRoot":"","sources":["C:\\Users\\fv792\\Documents\\Proyectos personales\\ApiRickyMorty\\src\\app\\services\\ricky-morty.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RickyMortyService {\n\n  constructor(private http: HttpClient) { }\n\n  getRickyMorty() {\n    return this.http.get<any>('https://rickandmortyapi.com/api/character/?page=/?random' + Date.now());\n  }\n}\n\n\nfetch(´https://rickandmortyapi.com/api/character/?page={Math.floor(Math.random() * 43}´)\n  .then(response => response.json())\n  .then(data => {\n    const characters = data.results;\n    console.log(characters);\n  })\n  .catch(error => console.error(error))\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}